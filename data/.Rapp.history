setwd('~/GitHub/healthy-ride-pgh/data')#
csvs <- list.files(pattern = '-q\\d.csv$')#
#
data <- NULL#
for (c in csvs) {#
  data <- rbind(#
    data,#
    read.csv(c)#
  )#
}
dim(data)#
head(data)#
tail(data)
stations <- read.csv('healthyridestations2017')
stations <- read.csv('healthyridestations2017.csv')
dim(stations)#
head(stations)#
tail(stations)
current_stations <- subset(data, #
  From.station.id %in% stations$Station.. | #
  To.station.id %in% stations$Station..#
)
dim(current_stations)
dim(data)
station_trips <- subset(data, #
  From.station.id %in% stations$Station.. & #
  To.station.id %in% stations$Station..#
)
dim(station_trips)
dim(data)
current_station_trips <- subset(data,#
  From.station.id %in% stations$Station.. &#
  To.station.id %in% stations$Station..#
)
from_to_freq_table <- xtabs(~ From.station.id + To.station.id, data=current_station_trips)#
from_to_freq_data <- as.data.frame( from_to_freq_table )#
names(from_to_freq_data) <- c('from', 'to', 'freq')#
dim(from_to_freq_data)
dim(from_to_freq_table)
head(dim(from_to_freq_table)#
)
head(from_to_freq_table)
from_to_freq_matrix <- as.matrix(from_to_freq_table)
head(from_to_freq_matrix)
colSums(from_to_freq_matrix)
dim(colSums(from_to_freq_matrix))
len(colSums(from_to_freq_matrix))
length(colSums(from_to_freq_matrix))
1 / colSums(from_to_freq_matrix)
from_to_freq_matrix / colSums(from_to_freq_matrix)
W <- from_to_freq_matrix / colSums(from_to_freq_matrix)
colSums(W)
rowSums(W)
W <- t(t(from_to_freq_matrix)/colSums(from_to_freq_matrix))
head(W)
colSuma(W)
colSums(W)
W <- t( t(from_to_freq_matrix) / colSums(from_to_freq_matrix) )
library
W <- sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')
colSums(W)
library(anocva)
clustered < - spectralClustering(W, 2)
clustered <- spectralClustering(W, 2)
from_to_freq_matrix <- as.matrix(sapply(from_to_freq_table, as.numeric))
from_to_freq_matrix
W <- sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')
head(W)
clustered <- spectralClustering(W, 2)
dim(W)
from_to_freq_matrix <- matrix(as.numeric(unlist(from_to_freq_table)),nrow=nrow(from_to_freq_table))
dim(from_to_freq_matrix)
W <- sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')
clustered <- spectralClustering(W, 2)
W
W
clustered <- spectralClustering(W, 2)
W <- as.numeric(#
  sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')#
)
clustered <- spectralClustering(W, 2)
W
dim(W)
from_to_freq_matrix <- matrix(#
  as.numeric(unlist(from_to_freq_table)),#
  nrow=nrow(from_to_freq_table)#
)#
W <- as.numeric(#
  sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')#
)
clustered <- spectralClustering(W, 2)
from_to_freq_matrix <- as.matrix(#
  as.numeric(unlist(from_to_freq_table)),#
  nrow=nrow(from_to_freq_table)#
)
dim(from_to_freq_matrix)
from_to_freq_matrix <- matrix(#
  as.numeric(unlist(from_to_freq_table)),#
  nrow=nrow(from_to_freq_table)#
)
dim(from_to_freq_matrix)
from_to_p_matrix <- matrix(#
  as.numeric(#
    sweep(from_to_freq_matrix, 2, colSums(from_to_freq_matrix), '/')#
  ),#
  nrow=nrow(from_to_freq_table)#
)
clustered <- spectralClustering(from_to_p_matrix, 2)
head(from_to_p_matrix)
library(fcd)
spectral.clustering(from_to_p_matrix, normalised = TRUE, score = FALSE, K = 2, adj = FALSE)
spectral.clustering(from_to_p_matrix, normalised = TRUE, score = FALSE, K = 2, adj = T)
spectral.clustering(from_to_p_matrix, normalised = TRUE, score = FALSE, K = 2, adj = T)
spectral.clustering(from_to_p_matrix, normalised = TRUE, score = FALSE, K = 2, adj = T)
fcd_clusters <- fcd(from_to_p_matrix, 2)
fcd_clusters <- fcd(from_to_p_matrix, 3)
spectral_clusters <- spectralClustering(from_to_p_matrix, 2)
clusters <- spectral.clustering(from_to_p_matrix, normalised = TRUE, score = FALSE, K = 2, adj = FALSE)
clusters <- spectral.clustering(from_to_p_matrix, normalised = TRUE, score = TRUE, K = 2, adj = FALSE)
clusters
spectral.clustering(from_to_p_matrix, K = 3, adj = TRUE)
head(stations)
clusters <- spectral.clustering(from_to_p_matrix, K = 3, adj = TRUE)#
for i in 1:len(clusters) {#
  print(paste(stations$Station.Name[i], stations$Station..[i])#
}
clusters <- spectral.clustering(from_to_p_matrix, K = 3, adj = TRUE)#
for (i in 1:len(clusters)) {#
  print(paste(stations$Station.Name[i], stations$Station..[i])#
}
for (i in 1:len(clusters)) {#
  print(paste(stations$Station.Name[i], stations$Station..[i]))#
}
for (i in 1:length(clusters)) {#
  print(paste(stations$Station.Name[i], stations$Station..[i]))#
}
for (i in 1:length(clusters)) {#
  print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='\t'))#
}
clusters <- spectral.clustering(from_to_p_matrix, K = 3, adj = TRUE)#
for (i in 1:length(clusters)) {#
  print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}
clusters <- NULL#
for (i in 1:10) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}
clusters <- NULL#
for (i in 1:6) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}
clusters
clusters <- NULL#
for (i in 1:8) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}
clusters <- t(clusters)
clusters
clusters <- as.data.frame( t(clusters) )
clusters
clusters <- NULL#
for (i in 1:8) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}#
#
clusters <- as.data.frame( t(clusters) )
clusters
seq(1,8)
paste('c', seq(1,8))
paste('c', seq(1,8), sep='')
max_k <- 8#
clusters <- NULL#
for (i in seq(1,8)) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}
clusters
clusters <- as.data.frame( t(clusters) )
clusters
names(clusters) <- paste('c', seq(1,max_k), sep='')
clusters
stations
clusters <- cbind(stations$Station.., clusters)#
names(clusters)[1] <- 'station_number'
clusters
max_k <- 8#
clusters <- NULL#
for (i in seq(2,8)) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = TRUE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}#
#
clusters <- as.data.frame( t(clusters) )#
names(clusters) <- paste('c', seq(2, max_k), sep='')#
clusters <- cbind(stations$Station.., clusters)#
names(clusters)[1] <- 'station_number'
clusters
write.csv(clusters, file='../public/clusters.csv', row.names=F)
max_k <- 8#
clusters <- NULL#
for (i in seq(2,8)) {#
  c <- spectral.clustering(from_to_p_matrix, K = i, adj = FALSE)#
  clusters <- rbind(clusters, c)#
  # print(paste(clusters[i], stations$Station.Name[i], stations$Station..[i], sep='|'))#
}#
#
clusters <- as.data.frame( t(clusters) )#
names(clusters) <- paste('c', seq(2, max_k), sep='')#
clusters <- cbind(stations$Station.., clusters)#
names(clusters)[1] <- 'station_number'#
write.csv(clusters, file='../public/clusters.csv', row.names=F)
current_station_trips <- subset(data,#
  From.station.id %in% stations$Station.. &#
  To.station.id %in% stations$Station..#
)#
#
from_to_freq_table <- xtabs(~ From.station.id + To.station.id, data=current_station_trips)#
#
from_to_freq_data <- as.data.frame( from_to_freq_table )#
names(from_to_freq_data) <- c('from', 'to', 'freq')#
dim(from_to_freq_data)#
#
from_to_time_table <- xtabs(#
  Tripduration ~ From.station.id + To.station.id,#
  aggregate(Tripduration ~ From.station.id + To.station.id, current_station_trips, mean)#
)#
from_to_time_data <- as.data.frame( from_to_time_table )#
names(from_to_time_data) <- c('from', 'to', 'duration_s')#
dim(from_to_time_data)#
#
from_to_data <- merge(#
  from_to_freq_data,#
  from_to_time_data,#
  by=c('from', 'to')#
)#
dim(from_to_data)#
#
write.csv(from_to_data, file='../public/from_to_data.csv', row.names=F)
write.csv(from_to_p_matrix, file='from_to_p_matrix.csv', row.names=F)
from_to_p_matrix
head(from_to_p_matrix)
stations
as.matrix(stations$X..of.Racks)
racks <- t(stations$X..of.Racks)
raks
racks
racks %*% from_to_p_matrix
racks %*% from_to_p_matrix %*% from_to_p_matrix
install.packages("expm", repos="http://R-Forge.R-project.org")
racks %*% from_to_p_matrix %^% 10
library(expm)
racks %*% from_to_p_matrix %^% 10
racks %*% (from_to_p_matrix %^% 10)
racks %*% from_to_p_matrix
racks
racks %*% from_to_p_matrix
racks %*% (from_to_p_matrix %^% 2)
racks %*% (from_to_p_matrix %^% 3)
racks %*% (from_to_p_matrix %^% 4)
racks %*% (from_to_p_matrix %^% 5)
racks %*% (from_to_p_matrix %^% 6)
racks %*% (from_to_p_matrix %^% 7)
racks %*% (from_to_p_matrix %^% 8)
racks %*% (from_to_p_matrix %^% 9)
racks %*% (from_to_p_matrix %^% 10)
racks/sum(racks)
racks_dist <- racks / sum(racks)
racks_dist %*% from_to_p_matrix
racks %*% (from_to_p_matrix %^% 10)
racks_dist %*% (from_to_p_matrix %^% 10)
racks_dist %*% from_to_p_matrix
racks_dist %*% (from_to_p_matrix %^% 3)
racks_dist %*% (from_to_p_matrix %^% 4)
racks_dist %*% (from_to_p_matrix %^% 5)
racks_dist %*% (from_to_p_matrix %^% 6)
racks_dist %*% (from_to_p_matrix %^% 7)
racks_dist %*% (from_to_p_matrix %^% 8)
racks_dist %*% (from_to_p_matrix %^% 9)
racks_dist %*% (from_to_p_matrix %^% 10)
racks_dist
racks_dist %*% (from_to_p_matrix %^% 20)
racks_dist %*% (from_to_p_matrix %^% 5)
racks_dist %*% (from_to_p_matrix %^% 6)
racks_dist %*% (from_to_p_matrix %^% 10)
racks_dist %*% (from_to_p_matrix %^% 30)
from_to_p_matrix
