{"version":3,"sources":["format.js","AppLayout.js","Layout.js","SplitDataBar.js","StationList.js","history.js","RideMap.js","AllStations.js","distance.js","ClusterDot.js","StationDetails.js","SingleStation.js","App.js","serviceWorker.js","index.js"],"names":["percent","d3","commas","decimals","AppNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","legendBox","color","text","react_default","a","createElement","style","position","textAlign","className","marginBottom","fontSize","lineHeight","width","height","backgroundColor","marginRight","state","_this$props","overallTotal","children","Grid","fluid","Row","Col","sm","Link","to","marginTop","top","bottom","right","left","borderTop","React","Component","Layout","Fragment","styles","overflowY","src_SplitDataBar","fills","widths","outerWidth","reduce","b","aggregator","map","w","i","x","y","fill","key","StationList","loading","stations","stationTotals","fromToData","clusters","clustersK","max","number","s","n","same","find","f","from","freq","listItem","borderRadius","nameWrapper","concat","name","barWrapper","Label","category","PureComponent","padding","paddingBottom","borderBottom","textOverflow","whiteSpace","overflow","createBrowserHistory","RideMap","onClick","fromStation","history","push","_this2","locations","onChangeClustersK","bounds","L","LatLngBounds","latitude","longitude","lineData","filter","r","line","extent","d","opacityScale","domain","range","widthScale","maxStationRides","radiusScale","toDiffPlace","toSamePlace","Map","zoomControl","TileLayer","attribution","url","maxZoom","subdomains","opacity","maxNativeZoom","l","Polyline","positions","weight","CircleMarker","center","fillOpacity","radius","fillColor","zIndex","value","onChange","AllStations","src_RideMap","src_StationList","deg2rad","deg","Math","PI","ClusterDot","stationNumber","StationDetails","stationsByNumber","forEach","station","rides","bsStyle","bsSize","popularHeading","p","dist","lat1","lon1","lat2","lon2","dLat","dLon","sin","cos","atan2","sqrt","getDistanceFromLatLonInKm","destination","destinationName","duration","paddingLeft","paddingTop","paddingRight","SingleStation","Redirect","match","params","sort","includedStations","console","log","filteredProps","objectSpread","indexOf","src_StationDetails","App","componentDidMount","loadRideData","then","loadStationData","loadClusterData","categorizeStations","finally","setState","duration_s","totals","byStation","overall","racks","clusterArray","c","station_number","_this$state","trips","t","majority_return","e","target","Router","basename","process","Switch","Route","exact","path","component","AppLayout","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec090864.chunk.js","sourcesContent":["import * as d3 from 'd3';\nexport const percent = d3.format('0.1%');\nexport const commas = d3.format(',.0f');\nexport const decimals = d3.format(',.1f');","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { commas } from './format';\n\n\nclass AppNav extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    };\n  }\n\n\n  legendBox = (color, text) => {\n    return (\n      <div style={{ position: 'relative', textAlign: 'right' }}>\n        <div className=\"clearfix\" style={{ marginBottom: 5, fontSize: 10, lineHeight: '10px', position: 'relative' }}>\n          <div className=\"pull-right\" style={{ width: 10, height: 10, backgroundColor: color }}/>\n          <div style={{ marginRight: 15, color: '#777'}}>{ text }</div>\n        </div>\n      </div>\n    )\n  }\n\n  render(){\n    const {overallTotal, children} = this.props;\n\n    return (\n      <div>\n        <Grid fluid>\n          <Row>\n            <Col sm={6}>\n              <Link to=\"/\">\n                <h2 style={{ marginBottom: 0 }}>Healthy Ride</h2>\n              </Link>\n            </Col>\n            <Col sm={6} style={{ textAlign: 'right' }}>\n              <h2 style={{ marginTop: 15, marginBottom: 5 }}>\n                <small>{ commas(overallTotal) } rides</small>\n              </h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6}>\n              <small>May 31, 2015 - June 30, 2018</small>\n            </Col>\n            <Col sm={6}>\n                <div className=\"pull-right\">\n                  <div>{ this.legendBox('#3C8AF1', 'Returned to same station') }</div>\n                  <div>{ this.legendBox('#9EC6FB', 'Returned to another station') }</div>\n                </div>\n            </Col>\n          </Row>\n        </Grid>\n        <div style={{ position: 'absolute', top: 90, bottom: 0, right: 0, left: 0, borderTop: '1px solid whitesmoke' }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default AppNav;","import React from 'react';\n\nexport default props => {\n  return (\n    <React.Fragment>\n      <div style={styles.left}>\n        {props.left}\n      </div>\n      <div style={styles.right}>\n        {props.right}\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst styles = {\n  left: {\n    top: 0,\n    right: '40%',\n    bottom: 0,\n    left: 0,\n    position: 'absolute'\n  },\n  right: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: '60%',\n    position: 'absolute',\n    overflowY: 'scroll'\n  }\n};\n","import React from 'react';\nimport { percent } from './format';\nimport './SplitDataBar.css';\n\nexport default props => {\n  const height = props.height || 10;\n  const fills = props.fills || [];\n  const widths = props.widths || [];\n  const outerWidth = props.outerWidth || widths.reduce((a,b) => a + b, 0);\n\n  let aggregator = 0;\n\n  return (\n    <div className=\"SplitDataBar\">\n      <svg width={percent(outerWidth)} height={height}>\n      {\n        widths.map((w,i) => {\n          const x = aggregator;\n          aggregator += w;\n\n          return (\n            <rect x={ percent(x) } y={ 0 } height={ height } width={ percent(w) } fill={ fills[i] } key={ i } />\n          );\n        })\n      }\n        {/* <rect x={0} y={0} height={height} width={sameWidth} fill=\"#398BFB\" /> */}\n        {/* <rect x={sameWidth} y={0} height={10} width={diffWidth} fill=\"#9cc5fd\" /> */}\n      </svg>\n    </div>\n  )\n}\n","import React from 'react';\nimport * as d3 from 'd3';\nimport {Link} from 'react-router-dom';\nimport { Label } from 'react-bootstrap';\n\nimport SplitDataBar from './SplitDataBar';\n\nconst commas = d3.format(',.0f');\nconst percent = d3.format('.1%');\n\nclass StationList extends React.PureComponent {\n\n  render(){\n\n    const {\n      loading,\n      stations,\n      stationTotals,\n      overallTotal,\n      fromToData,\n      clusters,\n      clustersK,\n    } = this.props;\n\n    if(loading) {\n      return <div/>;\n    }\n\n    const max = stationTotals[ stations[0].number ];\n\n    return (\n      <div>\n        {\n          stations.map(s => {\n            const n = stationTotals[s.number];\n            const same = fromToData.find(f => f.from === s.number && f.to === s.number).freq;\n\n            const w = n / max;\n            const sameWidth = same / n;\n            const diffWidth = (n - same) / n;\n            const widths = [ sameWidth, diffWidth ];\n\n            return (\n              <div style={styles.listItem} key={s.number} >\n                {\n                  clustersK ?\n                  <div className=\"pull-right\">\n                    <div style={{\n                      width: 10,\n                      height: 10,\n                      borderRadius: 10,\n                      backgroundColor: d3.schemeCategory10[clusters[s.number][clustersK]]\n                    }}/>\n                </div>\n                  : null\n                }\n                <div style={styles.nameWrapper}>\n                  <Link to={`/${s.number}`} >\n                  <div style={styles.name}>{s.name}</div>\n                  </Link>\n                </div>\n                <div style={styles.barWrapper}>\n                  <Label className=\"pull-right\" style={styles.category}>\n                    { s.category }\n                  </Label>\n                  <div style={styles.number}>\n                    { commas(n) } rides, { percent(n / overallTotal) } of total\n                  </div>\n                  <div>\n                    <SplitDataBar outerWidth={w} widths={widths} fills={['#398BFB', '#9cc5fd']}/>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n\n}\n\n\nconst styles = {\n  listItem: {\n    padding: 10,\n    marginBottom: 5,\n    paddingBottom: 20,\n    borderBottom: '1px solid whitesmoke'\n  },\n  nameWrapper: {\n    height: 20, position: 'relative'\n  },\n  name: {\n    width: `calc(100% - 40px)`,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    color: '#555'\n  },\n  category: {\n    color: '#337ab7',\n    backgroundColor: 'whitesmoke'\n  },\n  barWrapper: {\n    height: 20, position: 'relative'\n  },\n  number: {\n    fontSize: 12,\n    color: 'black'\n  },\n\n};\n\n\nexport default StationList;","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n})\n","import React from 'react';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport { Map, TileLayer, CircleMarker, Circle, Polyline } from 'react-leaflet'\nimport history from './history';\n\nclass RideMap extends React.Component {\n  onClick = fromStation => {\n    history.push(`/${ fromStation }`)\n  }\n\n  render(){\n    const { fromToData, stationTotals, stations, locations, loading, clusters, clustersK, onChangeClustersK } = this.props;\n\n    if(loading) {\n      return <div/>\n    }\n    // const bounds = this.bounds(stations);\n    const bounds = new L.LatLngBounds(\n      stations.map(s => [s.latitude, s.longitude])\n    );\n\n\n    const lineData = fromToData.filter(r => (\n      locations[r.from] && locations[r.to]\n    ))\n    .map(r => {\n      return {\n        from: r.from,\n        to: r.to,\n        line: [ locations[r.from] , locations[r.to] ],\n        percent: r.freq / stationTotals[r.from],\n      }\n    });\n\n    const extent = d3.extent(lineData, d => d.percent);\n    const opacityScale = d3.scalePow(0.5).domain(extent).range([0.01, 1]);\n    const widthScale = d3.scaleLog().domain(extent).range([0.01, 3]);\n    const maxStationRides = stationTotals[stations[0].number];\n    const radiusScale = d3.scalePow(0.5).domain([0, maxStationRides]).range([2, 12]);\n\n    const toDiffPlace = lineData.filter(r => r.to !== r.from)\n    const toSamePlace = lineData.filter(r => r.to === r.from)\n\n    return (\n      <div style={{ position: 'absolute', top: 0, right: 0, bottom: 0, left: 0 }}>\n        <Map\n          bounds={bounds}\n          style={{ position: 'absolute', top: 0, right: 0, bottom: 0, left: 0 }}\n          zoomControl={false}\n        >\n\n          <TileLayer\n            attribution=\"&copy; <a href='http/://cartodb.com/attributions'>CartoDB</a>\"\n            url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}{r}.png\"\n            maxZoom={19}\n            subdomains=\"abcd\"\n            opacity={0.35}\n          />\n          <TileLayer\n            attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toposm-color-relief/{z}/{x}/{y}.jpg\"\n            maxZoom={19}\n            maxNativeZoom={12}\n            subdomains=\"abcd\"\n            opacity={0.35}\n          />\n\n            {\n              toDiffPlace.map((l,i) => (\n                <Polyline\n                  positions={l.line}\n                  key={`Polyline-${i}`}\n                  weight={ widthScale(l.percent) }\n                  opacity={ opacityScale(l.percent) }\n                />\n              ))\n            }\n\n            {\n              toSamePlace.map((l,i) => (\n                <CircleMarker\n                  center={l.line[0]}\n                  key={`Circle-${i}`}\n                  fillOpacity={0}\n                  radius={radiusScale(stationTotals[l.from])}\n                  weight={ widthScale(l.percent) }\n                  opacity={ opacityScale(l.percent) }\n                />\n              ))\n            }\n\n            {\n              stations.map(s => (\n                  <CircleMarker\n                    key={`CircleMarker-${s.number}`}\n                    center={[s.latitude, s.longitude]}\n                    radius={radiusScale(stationTotals[s.number])}\n                    width={5}\n                    color=\"transparent\"\n                    fillOpacity={0}\n                    fillColor=\"#ffffff\"\n                    onClick={() => this.onClick(s.number)}\n                  />\n              ))\n            }\n\n            {\n              stations.map((s,i) => (\n                  <CircleMarker\n                    key={`CircleCenter-${s.number}`}\n                    center={[s.latitude, s.longitude]}\n                    // radius={5}\n                    radius={radiusScale(stationTotals[s.number])}\n                    width={5}\n                    opacity={0}\n                    color=\"transparent\"\n                    fillOpacity={clustersK ? 0.7 : 0.25}\n                    fillColor={ clustersK ? d3.schemeCategory10[clusters[s.number][clustersK]] : '#0462e2' }\n                    onClick={() => this.onClick(s.number)}\n                  />\n              ))\n            }\n\n\n        </Map>\n        <div style={{ position: 'absolute', top: 15, right: 15, width: 100, zIndex: 1000 }}>\n            <select className=\"form-control input-sm\" value={clustersK} onChange={onChangeClustersK}>\n              <option value=\"\">None</option>\n              <option value=\"c2\">2 Clusters</option>\n              <option value=\"c3\">3 Clusters</option>\n              <option value=\"c4\">4 Clusters</option>\n              <option value=\"c5\">5 Clusters</option>\n              <option value=\"c6\">6 Clusters</option>\n              {/* <option value=\"c7\">7 Clusters</option> */}\n              {/* <option value=\"c8\">8 Clusters</option> */}\n            </select>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default RideMap;","import React from 'react';\nimport Layout from './Layout';\n\nimport StationList from './StationList';\nimport RideMap from './RideMap';\n\nexport default props => {\n  if(props.loading) {\n    return (\n      <div style={{ padding: 50, textAlign: 'center' }}>\n        <i className=\"fas fa-bicycle fa-spin fa-3x\"/>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      left = {\n        <RideMap {...props}/>\n      }\n      right={\n        <StationList\n          {...props}\n        />\n      }\n    />\n  );\n}\n","export const getDistanceFromLatLonInKm = (lat1,lon1,lat2,lon2) =>  {\n  const R = 6371; // Radius of the earth in km\n  const dLat = deg2rad(lat2-lat1);  // deg2rad below\n  const dLon = deg2rad(lon2-lon1);\n  const a =\n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  const d = R * c; // Distance in km\n  return d;\n}\n\n// export const getDistanceFromLatLonInMi = (lat1, lon1, lat2, lon2, unit) => {\n//   var radlat1 = Math.PI * lat1/180;\n//   var radlat2 = Math.PI * lat2/180;\n//   var radlon1 = Math.PI * lon1/180;\n//   var radlon2 = Math.PI * lon2/180;\n//   var theta = lon1-lon2;\n//   var radtheta = Math.PI * theta/180;\n//   var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n//   dist = Math.acos(dist);\n//   dist = dist * 180/Math.PI;\n//   dist = dist * 60 * 1.1515;\n//   if (unit==\"K\") { dist = dist * 1.609344; }\n//   if (unit==\"N\") { dist = dist * 0.8684; }\n//   return dist;\n// }\n\nexport const deg2rad = deg => {\n  return deg * (Math.PI/180);\n}\n\nexport const km2mi = km => 0.62137 * km;","import React from 'react';\nimport * as d3 from 'd3';\nexport default props => {\n  const {\n    clusters,\n    clustersK,\n    stationNumber\n  } = props;\n\n  if(!clustersK) {\n    return null;\n  }\n\n  return (\n    <div className=\"pull-right\">\n      <div style={{\n        width: 10,\n        height: 10,\n        borderRadius: 10,\n        backgroundColor: d3.schemeCategory10[clusters[stationNumber][clustersK]]\n      }}/>\n    </div>\n  );\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Label, Button} from 'react-bootstrap';\nimport { commas, percent, decimals } from './format';\nimport { getDistanceFromLatLonInKm, km2mi  } from './distance';\nimport SplitDataBar from './SplitDataBar';\nimport ClusterDot from './ClusterDot';\n\n\nclass StationDetails extends React.Component {\n\n  render(){\n    const {\n      stations,\n      stationTotals,\n      overallTotal,\n      fromToData,\n      stationNumber,\n      clusters,\n      clustersK\n    } = this.props;\n\n    const stationsByNumber = {};\n    stations.forEach(s => stationsByNumber[s.number] = s);\n    const station = stationsByNumber[stationNumber];\n    const rides = stationTotals[station.number];\n\n    return (\n      <div>\n        <div>\n          <div style={{ backgroundColor: 'whitesmoke', padding: 15 }}>\n            {/* <Button componentClass={Link} to=\"/\">\n              <i className=\"fas fa-arrow-back\"/>\n            </Button> */}\n            <h4>\n              <Label className=\"pull-right\" bsStyle=\"primary\" bsSize=\"medium\">{ station.category }</Label>\n              { station.name }\n            </h4>\n            <h5>\n              { commas(rides) } or { percent( rides / overallTotal ) } of all rides\n            </h5>\n\n          </div>\n          <div style={styles.popularHeading}>\n            Popular destinations from this station:\n          </div>\n        </div>\n        <div style={{ position: 'absolute', overflowY: 'scroll', top: 122, right: 0, bottom: 0, left: 0 }}>\n\n            {\n              fromToData.map( (d,i) => {\n                const to = stationsByNumber[d.to];\n                if(!to) {\n                  return null;\n                }\n                const p = d.freq / stationTotals[station.number];\n                const dist = getDistanceFromLatLonInKm(\n                  station.latitude, station.longitude,\n                  to.latitude, station.longitude,\n                );\n                return (\n                  <div key={i} style={styles.destination}>\n                    <ClusterDot clusters={clusters} clustersK={clustersK} stationNumber={d.to}/>\n                    <div style={styles.destinationName}>{stationsByNumber[d.to].name}</div>\n                    <div style={styles.p}> { percent(p) }, { decimals( km2mi(dist) ) } mi, { commas(d.duration) } m</div>\n                    <SplitDataBar outerWidth={p} widths={[1]} fills={d.to === station.number ? ['#398BFB'] : ['#9cc5fd'] } />\n                  </div>\n                );\n              })\n            }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default StationDetails;\n\nconst styles = {\n  popularHeading: {\n    paddingLeft: 10,\n    paddingTop: 5,\n    paddingRight: 10,\n    paddingBottom: 5,\n    fontSize: 12,\n    borderBottom: '1px solid whitesmoke',\n    backgroundColor: 'rgb(235,235,235)',\n  },\n  destination: {\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderBottom: '1px solid whitesmoke'\n  },\n  destinationName: {\n    fontSize: 14,\n    color: '#555'\n  },\n  p: {\n    fontSize: 12\n  }\n};\n\n//   padding: 5px 10px 5px 10px;\n//   border-bottom: 1px solid whitesmoke;\n//   font-size: 12px;\n//   background-color: rgb(235,235,235);\n// }\n\n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as d3 from 'd3';\n\nimport Layout from './Layout';\nimport RideMap from './RideMap';\nimport StationDetails from './StationDetails';\n\nexport default props => {\n  if(props.loading) {\n    return <Redirect to=\"/\"/>;\n  }\n\n  const stationNumber = props.match.params.stationNumber;\n  const fromToData = props.fromToData\n    .filter(d => d.from === stationNumber && d.freq > 0)\n    .sort((a,b) => d3.descending(a.freq, b.freq));\n  const includedStations = fromToData.map(d => d.to).concat([stationNumber]);\n  console.log('includedStations', includedStations);\n\n  const filteredProps = {\n    ...props,\n    fromToData,\n    stations: props.stations.filter(s => includedStations.indexOf(s.number) > -1),\n  };\n\n  filteredProps.stationNumber = stationNumber;\n\n  console.log('filteredProps', filteredProps);\n  return (\n    <Layout\n      left = {\n        <RideMap {...filteredProps}/>\n      }\n      right={\n        <StationDetails {...filteredProps}/>\n      }\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport * as d3 from 'd3';\n\n\nimport AppLayout from './AppLayout';\nimport AllStations from './AllStations';\nimport SingleStation from './SingleStation';\n\nimport history from './history';\n\nclass App extends Component {\n  state = {\n    loading: true,\n    fromToData: null,\n    stationTotals: null,\n    stations: null,\n    locations: null,\n    clusters: null,\n    overallTotal: null,\n    clustersK: 'c6',\n  }\n\n\n  componentDidMount = () => {\n    this.loadRideData()\n    .then(this.loadStationData)\n    .then(this.loadClusterData)\n    .then(this.categorizeStations)\n    .finally(() => this.setState({loading: false}));\n  }\n\n  loadRideData = () => {\n    return d3.csv(`./from_to_data.csv`, d => {\n      return { from: d.from, to: d.to, freq: +d.freq, duration: +d.duration_s / 60 };\n    })\n    .then(fromToData => {\n      const totals = this.totals(fromToData);\n      this.setState({\n        fromToData: fromToData.filter(f => f.freq > 0),\n        stationTotals: totals.byStation,\n        overallTotal: totals.overall,\n      });\n    });\n  }\n\n  loadStationData = () => {\n    return d3.csv(`./healthyridestations2017.csv`, d => {\n      return {\n        number: d['Station #'],\n        name: d['Station Name'],\n        racks: +d['# of Racks'],\n        latitude: +d['Latitude'],\n        longitude: +d['Longitude']\n      };\n    })\n    .then(stations => {\n      const { stationTotals } = this.state\n      stations = stations.sort((a,b) => {\n        return d3.descending(stationTotals[a.number], stationTotals[b.number])\n      });\n\n      const locations = {};\n      stations.forEach(s => {\n        locations[s.number] = [s.latitude, s.longitude];\n      });\n\n      this.setState({ stations, locations });\n    });\n  }\n\n\n  loadClusterData = () => {\n    return d3.csv(`./clusters.csv`)\n      .then(clusterArray => {\n        const clusters = {};\n        clusterArray.forEach(c => clusters[c.station_number] = c);\n        console.log('clusters', clusters);\n        this.setState({ clusters });\n      });\n  }\n\n  totals = fromToData => {\n    let overall = 0;\n    const byStation = {};\n    fromToData.forEach(d => {\n      let s = byStation[d.from] || 0;\n      s += d.freq;\n      overall += d.freq;\n      byStation[d.from] = s;\n    });\n    return { byStation, overall };\n  }\n\n  categorizeStations = () => {\n    const { stations, fromToData, stationTotals } = this.state;\n    stations.forEach(s => {\n      const trips = fromToData.filter(t => t.from === s.number).sort((a,b) => d3.descending(a.freq,b.freq));\n      s.category = trips[0].to === s.number ? 'Out-and-back' : 'Commuter';\n      s.majority_return = s.category === 'Out-and-back' && trips[0].freq >= 0.5 * stationTotals[s.number];\n      console.log(s.number, s.category, s.majority_return, trips[0].freq, stationTotals[s.number]);\n    });\n\n    console.log('stations', stations);\n  }\n\n  onChangeClustersK = e => {\n    this.setState({ clustersK: e.target.value });\n  }\n\n\n\n  render() {\n    return (\n      <Router history={history} basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={props => {\n              const params = {...this.state, ...props, onChangeClustersK: this.onChangeClustersK};\n\n              return (\n                <AppLayout {...this.state}>\n                  <AllStations {...params}/>\n                </AppLayout>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/:stationNumber\"\n            component={props => {\n                const params = {...this.state, ...props, onChangeClustersK: this.onChangeClustersK};\n\n                return (\n                <AppLayout {...this.state}>\n                  <SingleStation {...params}/>\n                </AppLayout>\n              );\n            }}\n          />\n\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}